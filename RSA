#!/usr/bin/python3

import time
import math
import sys

def pollard_rho(n):
    # Check if the number is even
    if n % 2 == 0:
        return 2
    
    c = 2
    g = 2
    h = 1
    
    # Define the function for generating the next value in the sequence
    f = lambda c: (c**2 + 1) % n
    
    # Pollard's rho algorithm
    while h == 1:
        # Generate new values for c and g using the function f(c)
        c = f(c)
        # Update c with the next value generated by applying f(c)
        y = f(f(g))
        # Update y with the next value generated by applying f(f(g))
        h = math.gcd(abs(c - g), n)
    
    return (h)

def is_prime(num):
    # It check if a number is prime
    if num < 2:
        # If num is less than 2, it is not prime, so return False
        return False
    for i in range(2, int(math.sqrt(num)) + 1):
        # If num is divisible by any number in range [2, sqrt(num)],\
        #        it is not prime, so return False
        if num % i == 0:
            return (False)
    # If num is not divisible by any number in the \
    #        range [2, sqrt(num)], it is prime, so return True
    return (True)

def main():
    # It check if correct number of command-line arguments is provided
    if len(sys.argv) != 2:
        print("Usage: python factorize.py <file>")
        return

    file_path = sys.argv[1]

    start_time = time.time()
    try:
        with open(file_path, 'r') as file:
            # Reads first line of file and convert it to an integer
            number = int(file.readline().strip())
        # Factorize number using Pollard's rho algorithm
        p = pollard_rho(number)
        # Continue factorizing until a prime factor is found
        while not is_prime(p):
            p = pollard_rho(p)
        q = number // p
        # The number is prime
        if p == number or q == number:
            print(f"{number} is prime.")
        else:
            # Print the prime factors
            print(f"{number}={p}*{q}")

        if time.time() - start_time > 5:
            print("Time limit exceeded")
            exit()
    
    except FileNotFoundError:
        print(f"File '{file_path}' not found.")


if __name__ == '__main__':
    main()
