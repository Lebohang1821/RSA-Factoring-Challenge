#!/usr/bin/env bash

# The function to check if a number is prime
is_prime() {
    local num=$1
    if [ "$num" -le 1 ]; then
        return ((1)
    fi
    for ((i = 2; i * i <= num; i++)); do
        if [ "$((num % i))" -eq 0 ]; then
            return (1)
        fi
    done
    return (0)
}

if [ $# -ne 1 ]; then
    echo 'Usage: rsa <file>'
    exit 1
fi

# It reads single number from input file
number=$(cat "$1")

# It checks if input number is valid
if [ "$number" -le 1 ]; then
    echo "Invalid input: $number"
    exit 1
fi

# It factorize number
for ((i = 2; i * i <= number; i++)); do
    if [ "$((number % i))" -eq 0 ]; then
        factor1=$i
        factor2=$((number / i))
        break
    fi
done

# It check if both factors are prime
is_prime "$factor1"
is_prime "$factor2"

# It print prime factorization if both factors are prime, or indicate inability to find prime factors
if [ $? -eq 0 ]; then
    echo "$number=$factor1*$factor2"
else
    echo "Unable to find prime factors for: $number"
fi
