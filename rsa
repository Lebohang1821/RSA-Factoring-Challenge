#!/usr/bin/env bash
# The _RSA_ Challenge

# It defins function called check_factor
check_factor() {
    # It checks if number of arguments is not equal to 3
    if [ $# -ne 3 ]; then
        my_args=("$@")
        my_count=0
        num2=1
        # Iterate through the arguments
        for a in ${my_args[*]}; do
            if [ $my_count -gt 1 ]; then
                num2=$(echo $a*$num2 | bc)  # Calculate the product of all arguments except the first two
            fi
            my_count=$((my_count + 1))
        done
    else
        num2=$3  # If three arguments are provided, assign the third argument to num2
    fi

    num1=$2  # Assign the second argument to num1
    num=$(echo "$1" | tr ':' '=')  # Transform the first argument into an equality comparison

    # Compare num2 and num1 using bc and store the result in the 'result' variable
    result=$(echo "if($num2 > $num1) 1 else 0" | bc)

    # If result is 1, swap num1 and num2
    if ((result == 1)); then
        numcp=$num1
        num1=$num2
        num2=$numcp
    fi

    # Echo a string that combines transformed num, num1, and num2
    echo "$num$num1*$num2"
}

# It check number of command-line arguments
if [ $# -ne 1 ]; then
    echo 'Usage: rsa <file>'
    exit 1
else
    # It read input fro file specified as first command-line argument
    while read i; do
        # It calculate prime factors of 'i' using 'factor' command
        result=$(factor "$i")
        
        # Calls check_factor function with result
        check_factor $result
    done < "$1"
fi
